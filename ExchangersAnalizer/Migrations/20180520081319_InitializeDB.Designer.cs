// <auto-generated />
using ExchangersAnalizer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace ExchangersAnalizer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180520081319_InitializeDB")]
    partial class InitializeDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("ExchangersAnalizer.Entities.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AllowIPs");

                    b.Property<int>("NumberOfCoinsToSend");

                    b.Property<int>("RefreshInMinutes");

                    b.Property<string>("TelegramChatGroups");

                    b.Property<string>("TelegramKey");

                    b.HasKey("Id");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("ExchangersAnalizer.Entities.Symbol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Binance");

                    b.Property<string>("Bittrex");

                    b.Property<string>("Cryptopia");

                    b.Property<string>("GlobalSymbol");

                    b.Property<string>("HitBtc");

                    b.Property<string>("KuCoin");

                    b.Property<string>("Yobit");

                    b.HasKey("Id");

                    b.ToTable("Symbols");
                });
#pragma warning restore 612, 618
        }
    }
}
